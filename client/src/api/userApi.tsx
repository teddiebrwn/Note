import axiosClient from "./axiosClient";

// üìå G·ª≠i email x√°c th·ª±c
export const sendVerificationEmail = async (data: {
  name: string;
  email: string;
}) => {
  try {
    const response = await axiosClient.post("/users/send-verification", data);
    return response.data;
  } catch (error) {
    console.error("‚ùå Error sending verification email:", error);
    throw error;
  }
};

// üìå X√°c minh OTP
export const verifyOTP = async (email: string, otpCode: string) => {
  try {
    const response = await axiosClient.post("/users/verify-otp", {
      email,
      otpCode,
    });
    return response.data;
  } catch (error) {
    console.error("‚ùå Error verifying OTP:", error);
    throw error;
  }
};

// üìå G·ª≠i l·∫°i OTP
export const resendOTP = async (email: string) => {
  try {
    const response = await axiosClient.post("/users/resend-otp", { email });
    return response.data;
  } catch (error) {
    console.error("‚ùå Error resending OTP:", error);
    throw error;
  }
};

// üìå ƒê·∫∑t m·∫≠t kh·∫©u
export const setPassword = async (data: {
  email: string;
  password: string;
}) => {
  try {
    const response = await axiosClient.post("/users/set-password", data);
    return response.data;
  } catch (error) {
    console.error("‚ùå Error setting password:", error);
    throw error;
  }
};

// üìå L·∫•y danh s√°ch username g·ª£i √Ω (chuy·ªÉn sang `POST` ƒë·ªÉ tr√°nh email l·ªô qua URL)
export const suggestUsernames = async (email: string) => {
  try {
    console.log("üì§ Sending request:", { email });

    const response = await axiosClient.post("/users/suggest-usernames", {
      email,
    });

    console.log("üì• API Response:", response.data); // Ki·ªÉm tra d·ªØ li·ªáu t·ª´ server

    if (!response.data) {
      throw new Error("No data received from API.");
    }

    return response.data;
  } catch (error) {
    console.error("‚ùå API Request Failed:", error);
    throw error;
  }
};

// üìå C·∫≠p nh·∫≠t username
export const setUsername = async (data: {
  email: string;
  username: string;
}) => {
  try {
    const response = await axiosClient.post("/users/set-username", data);
    return response.data;
  } catch (error) {
    console.error("‚ùå Error setting username:", error);
    throw error;
  }
};

// üìå ƒêƒÉng nh·∫≠p ng∆∞·ªùi d√πng
export const loginUser = async ({
  email,
  username,
  password,
}: {
  email?: string;
  username?: string;
  password: string;
}) => {
  try {
    // ‚úÖ Ch·ªâ g·ª≠i email n·∫øu c√≥, ho·∫∑c username n·∫øu c√≥
    const response = await axiosClient.post("/users/login", {
      email: email || undefined,
      username: username || undefined,
      password,
    });

    return response.data;
  } catch (error) {
    console.error("‚ùå Error logging in:", error);
    throw error;
  }
};
